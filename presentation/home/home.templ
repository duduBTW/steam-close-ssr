package home

import (
	"strconv"
	"github.com/duduBTW/steam-ssr/components"
	"github.com/duduBTW/steam-ssr/data"
)

type Props struct {
	Games []data.Game
}

templ HomePage(props Props) {
	@components.Layout("Steam clone ssr") {
		<div class="h-[80vh]">
			<img src="https://pbs.twimg.com/media/GBgiwHMagAACRCv?format=jpg&name=medium" class="w-full h-full object-cover"/>
		</div>
		<div class="container mx-auto px-4">
			<p class="my-4">FEATURED</p>
			<steam-carousel loop startSlide="0" class="flex flex-col gap-3 mb-4">
				for _, game := range props.Games {
					@LargeGameCard(game)
				}
			</steam-carousel>
			<p class="my-4">STUFF</p>
			<steam-carousel class="flex flex-col gap-4 mb-4">
				for _, game := range props.Games {
					<steam-carousel-item>
						<div class="grid grid-cols-3 gap-2">
							@MediumGameCard(MediumGameCardProps{
								Title: game.Name,
								Image: game.CoverImage,
								Price: game.Price,
								Id: game.GameId,
							})
							@MediumGameCard(MediumGameCardProps{
								Title: game.Name,
								Image: game.CoverImage,
								Price: game.Price,
								Id: game.GameId,
							})
							@MediumGameCard(MediumGameCardProps{
								Title: game.Name,
								Image: game.CoverImage,
								Price: game.Price,
								Id: game.GameId,
							})
						</div>
					</steam-carousel-item>
				}
			</steam-carousel>
		</div>
	}
}

templ LargeGameCard(game data.Game) {
	<steam-carousel-item>
		<steam-gallery>
			<div class="flex gap-3">
				<div class="flex-[2]">
					<steam-gallery-main>
						<img class="aspect-video object-cover rounded-lg" src={ game.CoverImage }/>
					</steam-gallery-main>
				</div>
				<div class="flex-1 flex flex-col gap-2">
					<h3 class="text-xl font-medium">{ game.Name }</h3>
					<p class="text-gray-400 line-clamp-3">{ game.Description }</p>
					<div class="grid grid-cols-2 rounded-lg overflow-hidden">
						for _, image := range game.Images {
							<steam-gallery-sub imageUrl={ image.Large }>
								<div class="aspect-video">
									<img class="object-cover w-full h-full" src={ image.Medium }/>
								</div>
							</steam-gallery-sub>
						}
					</div>
					<div class="flex mt-auto items-center gap-2">
						@components.WishlistButton(game.GameId) {
							<i class="ri-heart-2-line"></i>
							Wishlist
						}
						<div class="ml-auto">
							{ game.Price }
						</div>
						<a href={ templ.URL("/game/" + strconv.Itoa(game.GameId)) }>
							@components.Button("primary") {
								Buy Now
							}
						</a>
					</div>
				</div>
			</div>
		</steam-gallery>
	</steam-carousel-item>
}

type MediumGameCardProps struct {
	Image string
	Title string
	Price string
	Id    int
}

templ MediumGameCard(props MediumGameCardProps) {
	<a href="/game" class="p-3 rounded-lg bg-gray-900 hover:bg-gray-950 flex flex-col gap-3">
		<div class="aspect-video">
			<img class="object-cover rounded w-full aspect-video" src={ props.Image }/>
		</div>
		<div class="text-lg font-medium">
			{ props.Title }
		</div>
		<div class="flex items-center gap-2 justify-end">
			<div>
				{ props.Price }
			</div>
			@components.WishlistButton(props.Id) {
				<i class="ri-heart-2-line"></i>
			}
		</div>
	</a>
}

templ WishlistedButton() {
	@components.Button("secondary") {
		<i class="ri-heart-2-fill"></i>
	}
}
